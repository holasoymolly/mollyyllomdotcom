@import '../../scss/mixins';

.hasBg {
    border-bottom: 1px solid var(--primary-dark);
}

.titleContainer {
    background-color: var(--bg-color-3);
    padding: 0;
    height: 70vh; /* Asegurarse de que ocupe toda la altura disponible */
    display: flex;
    align-items: center;

    @include media($max: $mobile) {
        height: auto; /* Ajustar la altura para móvil */
        flex-direction: column;
        align-items: stretch; /* Asegurar que los elementos hijos se estiren */
    }
}

.titleContent {
    display: flex;
    align-items: stretch;
    height: 100%;
    width: 100%;

    @include media($max: $mobile) {
        flex-direction: column;
        height: auto;
    }
}

.titleImageContainer {
    flex: 0 0 65%; /* Ajustar el ancho del contenedor según sea necesario */
    height: 100%;
    overflow: hidden;
    margin: 0;
    padding: 0;

    @include media($max: $mobile) {
        flex: none;
        width: 100%;
        height: 50vh; /* Ajustar la altura del contenedor de la imagen para móvil */
        overflow: hidden; /* Asegurar que la imagen no salga del contenedor */
    }
}

.titleImage {
    width: 100%;
    height: 100%;
    object-fit: cover; /* Asegurarse de que la imagen cubra el contenedor */
    border-radius: 0; /* Remover bordes redondeados */
    transform: scale(1.0); /* Aplicar zoom del X% */
    transform-origin: center; /* Asegurar que el zoom se centre */

    @include media($max: $mobile) {
        width: 100%;
        height: 100%; /* Asegurarse de que la imagen cubra el contenedor en móvil */
        object-fit: cover; /* Asegurar que la imagen cubra el contenedor sin distorsión */
    }
}

.projectsContainer {
    background-color: var(--bg-color-1);
    padding: 2rem; /* Ajusta el padding según tus necesidades */
}

.project {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    user-select: none;

    border-radius: 2rem;
    background-color: var(--background-dim2);
    border: 1px solid var(--primary-dark);

    .viewProject svg {
        @include transition;
    }

    &:nth-of-type(2n) {
        flex-direction: row-reverse;
    }

    &:hover {
        cursor: pointer;

        .viewProject svg {
            @include transition;
            color: var(--neon-1-1);
        }
    }
}

.projectHeader {
    display: flex;
    flex-direction: column;
    gap: var(--size-3x);

    p {
        font-size: 1.75rem;
        line-height: 1.2;

        strong {
            color: var(--primary-bright);
        }
    }

    .viewProject {
        svg {
            height: 1.5rem;
            color: var(--primary);
        }
    }

    .header {
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: 2rem;

        a {
            flex-grow: 0;
            flex-shrink: 1;
        }

        .privateOr {
            flex-grow: 0;
            flex-shrink: 1;
            height: fit-content;
        }
    }
}

.details {
    display: flex;
    flex-direction: column;
    flex-grow: 0;
    flex-shrink: 1;
    gap: var(--size-3x);
    overflow: hidden;

    padding: 2rem;

    h3 {
        position: relative;
    }

    h4 {
        margin-bottom: var(--size-1x);
    }

    ul {
        z-index: 2;
    }

    img {
        display: none;
    }
}

.imageContainer {
    z-index: 3;
    position: relative;
    display: block;
    width: 50%;
    border-radius: 1rem;
    flex-grow: 1;
    flex-shrink: 0;

    .imageAnimationContainer {
        position: absolute;
        overflow: hidden;
        border-radius: 2rem;
        height: calc(100% - 6rem);
        width: calc(100% + 9rem);
        right: 0;
        bottom: 0;

        > div > div {
            > span {
                position: absolute !important;
                right: 4rem;

                img {
                    width: calc(556px / 1.25) !important;
                }
            }
        }
    }
}

.privateOr {
    display: flex;
    flex-direction: row;
    gap: .35rem;
    align-items: center;
    max-width: fit-content;
    font-size: .7rem;
    font-weight: 400;
    font-family: var(--font-accent);
    color: var(--primary-dim);
    padding: .125rem .5rem;
    border-radius: 99rem;
    border: 1px solid var(--primary-dark);
    background: var(--primary-dark);
}

.bgContainer {
    --opacity: 10%;

    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: -2;
    width: 100%;
    height: 500px;

    .afterGlowBg {
        position: absolute;
        z-index: -2;
        top: -50%;
        right: 0px;
        height: 1000px;
        width: 500px;
        transform: translateX(50%);
        filter: blur(200px);
        opacity: var(--opacity);
        background: linear-gradient(180deg, var(--neon-1-1) 0%, var(--neon-1-2) 100%);
    }

    .orbitalBg {
        --left: linear-gradient(180deg, var(--neon-2-1) 0%, var(--neon-2-2) 100%);
        --center: linear-gradient(180deg, var(--neon-1-1) 0%, var(--neon-1-2) 100%);
        --right: linear-gradient(180deg, var(--neon-2-2) 0%, var(--neon-1-1) 100%);

        position: absolute;
        z-index: -1;
        width: 100%;
        left: -50%;

        display: flex;
        flex-direction: row;
        justify-content: space-between;
        gap: 2rem;

        height: 500px;

        filter: blur(200px);

        animation: rotationFore 240s linear infinite;
        transform-origin: center center;

        .bgSection {
            position: relative;
            width: calc(100% / 3 - 2rem);
            aspect-ratio: 1;
            height: 100%;
        }

        .bgInner {
            height: 100%;
            width: 100%;
            display: block;
            border-radius: 99rem;
        }

        .heroOrbital {
            height: 200%;
            top: 50%;
            transform: translateY(-50%);
        }

        .heroLeft {
            position: absolute;
            left: -50%;
            background: var(--left);
            opacity: calc(var(--opacity) + 15%);
        }
        .heroCenter {
            background: var(--center);
            opacity: var(--opacity);
        }
        .heroRight {
            position: absolute;
            right: -50%;
            background: var(--right);
            opacity: calc(var(--opacity) + 15%);
        }

        @keyframes rotationFore {
            0% {
                transform: rotate(0deg);
            }
            100% {
                transform: rotate(360deg);
            }
        }
    }
}

@include media($max: $mobile) {
    .titleContent {
        flex-direction: column;
        align-items: stretch;
        height: auto;
    }

    .titleImageContainer {
        width: 100%;
        height: 60vh; /* Ajustar la altura del contenedor de la imagen */
        margin: 0;
        padding: 0;
    }

    .titleImage {
        width: 100%;
        height: 100%; /* Ajustar para cubrir el contenedor */
        object-fit: cover; /* Asegurar que la imagen cubra el contenedor sin distorsión */
        margin: 0;
        padding: 0;
    }
}